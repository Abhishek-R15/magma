---
name: cwag-workflow

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - master
      - quentin-fix-xwfm-test
  pull_request:
    branches:
      - master
    paths:
      - 'orc8r/**'
      - 'lte/**'
      - 'feg/**'
      - 'cwf/**'
jobs:
  xwfm-test:
    runs-on: ubuntu-latest
    env:
      MAGMA_ROOT: "${{ github.workspace }}"
      ACCESSTOKEN: "${{ secrets.XWF_ACCESSTOKEN }}"
      AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
      AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
      AWS_DEFAULT_REGION: "${{ secrets.XWF_AWS_DEFAULT_REGION }}"
      AWS_ACCOUNT_ID: "${{ secrets.XWF_AWS_ACCOUNT_ID }}"
      PARTNERNAME: "${{ secrets.XWF_PARTNER_SHORT_NAME }}"
      CPURL: "${{ secrets.XWF_CPURL }}"
      VPCEndPointID: "${{ secrets.XWF_VPCEndPointID }}"
    steps:
      # Run dummy step to report this job as passed on pull_requests
      # This will unblock xwfm-deploy-latest
      - name: Run dummy step
        run: |
              echo "Unblocking xwfm-deploy-latest"
      - uses: actions/checkout@v2
        if: github.event_name != 'pull_request'
      - name: Loading openvswitch kernel module
        if: github.event_name != 'pull_request'
        run: sudo modprobe openvswitch
      - name: Authenticate to docker remote artifactory
        if: github.event_name != 'pull_request'
        # yamllint disable rule:line-length
        run: |
              docker login --username ${{ secrets.XWF_ARTIFACTORY_USER }} --password ${{ secrets.XWF_ARTIFACTORY_API_KEY }} ${{ secrets.XWF_ARTIFACTORY_LINK}}
      - name: Pull images
        if: github.event_name != 'pull_request'
        # yamllint disable rule:line-length
        run: |
              cd ${MAGMA_ROOT}/xwf/docker/
              docker-compose pull || true
      - name: Pull images
        if: github.event_name != 'pull_request'
        # yamllint disable rule:line-length
        run: |
              cd ${MAGMA_ROOT}/xwf/docker/
              docker-compose build --parallel
              docker-compose up --detach
              docker exec tests pytest --log-cli-level=info code/tests.py
      - name: Extract commit title
        if: github.ref == 'refs/heads/master'
        env:
          COMMIT_MESSAGE: ${{github.event.head_commit.message}}
        run: |
          echo COMMIT_TITLE="${COMMIT_MESSAGE%%$'\\n'*}"  >> $GITHUB_ENV
      # Notify ci channel when failing
      # Plugin info: https://github.com/marketplace/actions/slack-notify
      # yamllint enable
      - name: Notify failure to slack
        if: failure() && github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_CI }}
          SLACK_TITLE: "Github action xwfm-test failed"
          SLACK_MESSAGE: "${{env.COMMIT_TITLE}}"
          SLACK_USERNAME: "CWAG workflow"
          SLACK_ICON_EMOJI: ":boom:"
          SLACK_COLOR: "#FF0000"
          SLACK_FOOTER: ''
      # Notify ci channel when push succeeds
      - name: Notify success to Slack
        if: success() && github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL_ARTIFACTS }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_OSS }}
          SLACK_TITLE: "*xwfm-test test succeeded*"
          SLACK_MESSAGE: "${{env.COMMIT_TITLE}}"
          SLACK_USERNAME: "CWAG workflow"
          SLACK_ICON_EMOJI: ":heavy_check_mark:"
          SLACK_COLOR: "#00FF00"
          SLACK_FOOTER: ''
  xwfm-deploy-latest:
    needs:
      - xwfm-test
    runs-on: ubuntu-latest
    env:
      MAGMA_ROOT: "${{ github.workspace }}"
      DOCKER_REGISTRY: "${{ secrets.DOCKER_REGISTRY }}"
      DOCKER_USERNAME: "${{ secrets.DOCKER_USERNAME }}"
      DOCKER_PASSWORD: "${{ secrets.DOCKER_PASSWORD }}"
    steps:
      - uses: actions/checkout@v2
      - name: Build xwf go radius
        run: |
              cd ${MAGMA_ROOT}/feg
              docker build --build-arg BUILD_NUM=${GITHUB_SHA:0:8} --tag goradius -f radius/src/Dockerfile ./
      - name: Tag and push to Docker Registry
        if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
        # yamllint disable rule:line-length
        run: |
            ./ci-scripts/tag-push-docker.sh --images 'goradius' --tag "${GITHUB_SHA:0:8}" --tag-latest true
      - name: Load openvswitch kernel module for xwf integ test
        # yamllint enable
        run: sudo modprobe openvswitch
      - name: Build xwfm-integ-tests
        run: |
              cd ${MAGMA_ROOT}
              docker build --tag xwfm-integ-tests -f xwf/gateway/integ_tests/gw/Dockerfile ./
      - name: Tag and push to Docker Registry
        if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
        # yamllint disable rule:line-length
        run: |
            ./ci-scripts/tag-push-docker.sh --images 'xwfm-integ-tests' --tag "${GITHUB_SHA:0:8}" --tag-latest true
      - name: Extract commit title
        if: github.ref == 'refs/heads/master'
        env:
          COMMIT_MESSAGE: ${{github.event.head_commit.message}}
        run: |
          echo COMMIT_TITLE="${COMMIT_MESSAGE%%$'\\n'*}"  >> $GITHUB_ENV
      # Notify ci channel when failing
      # Plugin info: https://github.com/marketplace/actions/slack-notify
      # yamllint enable
      - name: Notify failure to slack
        if: failure() && github.ref == 'refs/heads/master'
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_CI }}
          SLACK_TITLE: "Github action xwfm-deploy-latest failed"
          SLACK_MESSAGE: "${{env.COMMIT_TITLE}}"
          SLACK_USERNAME: "CWAG workflow"
          SLACK_ICON_EMOJI: ":boom:"
          SLACK_COLOR: "#FF0000"
          SLACK_FOOTER: ' '
      # Notify ci channel when push succeeds
      - name: Notify success to slack
        if: success() && github.ref == 'refs/heads/master'
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL_ARTIFACTS }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_OSS }}
          SLACK_TITLE: "*xwfm Artifact Has Been Published*"
          SLACK_MESSAGE: "${{env.COMMIT_TITLE}}"
          SLACK_USERNAME: "CWAG workflow"
          SLACK_ICON_EMOJI: ":heavy_check_mark:"
          SLACK_COLOR: "#00FF00"
          SLACK_FOOTER: ' '
